---
- name: Ensure the Nginx is installed
  apt: name=nginx state=latest update_cache=yes
  tags:
      - nginx 

- name: Ensure that the Nginx service is stopped
  service: name=nginx state=stopped
  tags:
      - nginx 

- name:  Generate the Nginx configuration file
  template: src=nginx.j2
            dest=/etc/nginx/sites-available/{{ project_name }}
            backup=yes
  when: not use_ssl 
  tags:
      - nginx 

- name: Generate and upload the Nginx SSL configuration file
  template: src=nginx_ssl.j2
            dest=/etc/nginx/sites-available/{{ project_name }}
            backup=yes
  when: use_ssl
  tags:
      - nginx 

- name: Ensure that the default site is disabled
  command: rm /etc/nginx/sites-enabled/default
           removes=/etc/nginx/sites-enabled/default
  tags:
      - nginx 

- name: Ensure that the application site is enabled
  command: ln -s /etc/nginx/sites-available/{{ project_name }}
           /etc/nginx/sites-enabled/{{ project_name }}
           creates=/etc/nginx/sites-enabled/{{ project_name }}
  tags:
      - nginx

- name: Ensure the SSL Directory exists
  file: path=/svr/ssl/
        state=directory
        owner=root
        group=root
  sudo: yes
  when: use_ssl
  tags:
      - nginx
      - ssl 

- name: Generate the stronger DHE parameters
  command: openssl dhparam -out dhparam.pem 2048
  args:
    chdir: /svr/ssl
    creates: /srv/ssl/dhparam.pem
  sudo: yes
  when: use_ssl
  tags:
      - nginx
      - ssl 

- name: Copy the private key file 
  copy: src={{ keystore_path }}/{{ssl_private_key}} 
        dest=/svr/ssl/{{ssl_private_key}}  
        owner=root
        group=root
  sudo: yes
  when: use_ssl
  tags:
    - ssl 
    - nginx

- name: Copy the SSL bundle (public key) 
  copy: src={{ keystore_path }}/{{ ssl_cert }} 
        dest=/svr/ssl/{{ ssl_cert }}
        owner=root 
        group=root
  sudo: yes
  when: use_ssl 
  tags:
    - ssl
    - nginx

- name: Comodo SSL bundle for OCSP stapling 
  copy: src={{ keystore_path }}/{{ ca_cert }} 
        dest=/svr/ssl/{{ ca_cert }}
        owner=root 
        group=root
  sudo: yes
  when: use_ssl 
  tags:
    - ssl
    - nginx

- name: Ensure Nginx service is started
  service: name=nginx state=started enabled=yes
  tags:
      - nginx 
      - ssl 
